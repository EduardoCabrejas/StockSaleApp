@model List<StockSale.App.Models.Domain.CashFlow>

@{
    int nextPage = ViewBag.PageNumber + 1;
    int prevPage = ViewBag.PageNumber - 1;
    int totalIncome = 0;
    int totalOutcome = 0;
    foreach (var cashFlow in Model.ToList())
    {
        if (cashFlow.Income)
        {
            totalIncome += cashFlow.Import;
        }
        else
        {
            totalOutcome += cashFlow.Import;
        }
    };
}

<h1 class="title">Ingresos y Egresos</h1>
<div class="two-grid">
    <!-- Formulario para Nueva Deuda -->
    <form method="post" asp-area="" asp-action="AddCashFlow" asp-route-isIncome="true" id="addIncomeForm" class="double-grid">
        <input type="number" id="incomePayment" name="import" class="input-left" />
        <button class="new-button add-button w-100" type="submit" onclick="updatePaymentRoute(event, 'addIncomeForm', 'incomePayment')">
            <span class="new-button__text">Agregar Ingresos</span>
            <span class="new-button__icon">
                <svg class="svg" fill="none" height="24" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
                    <line x1="12" x2="12" y1="5" y2="19"></line>
                    <line x1="5" x2="19" y1="12" y2="12"></line>
                </svg>
            </span>
        </button>
    </form>
    <!-- Formulario para Quitar Deuda -->
    <form method="post" asp-area="" asp-action="AddCashFlow" asp-route-isIncome="false" id="removeIncomeForm" class="double-grid">
            <input type="number" id="expensePayment" name="import" class="input-left" />
        <button class="new-button remove-button w-100" type="submit" onclick="updatePaymentRoute(event, 'removeIncomeForm', 'expensePayment')">
                <span class="new-button__text">Agregar Egresos</span>
                <span class="new-button__icon">
                    <svg class="svg" fill="none" height="24" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
                      <line x1="5" x2="19" y1="12" y2="12"></line>
                    </svg>
                </span>
            </button>
    </form>
</div>


<form method="get">
    <div class="input-group mb-4">
        <input class="form-control"
               type="date"
               name="searchString"
               placeholder="Buscar por fecha..."
               value="@Context.Request.Query["searchString"]" />
        <button type="submit" class="btn-submit">
            Buscar
        </button>
    </div>
</form>

    <h1 class="title mb-4">Estado de Cuenta</h1>
    <div class="two-grid">
        <h2 class="m-auto">Total Ingreso: @totalIncome.ToString("C")</h2>
    <h2 class="m-auto">Total Egreso: @totalOutcome.ToString("C")</h2>
    </div>

<div>
    @if (Model != null && Model.Any())
    {
        <div class="table-responsive">
            <table class="table table-bordered table-hover">
                <thead class="table-head">
                    <tr>
                        <th>Fecha</th>
                        <th>Importe</th>
                        <th>Ingreso</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var cashFlow in Model)
                    {
                        <tr>
                            <td>@cashFlow.Date.ToShortDateString()</td>
                            <td>@cashFlow.Import.ToString("C")</td>
                            @if (cashFlow.Income)
                            {
                                <td class="text-success fw-bold">Ingreso</td>
                            }
                            else
                            {
                                <td class="text-danger fw-bold">Egreso</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <!-- Paginación -->
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @(ViewBag.PageNumber == 1 ? "disabled" : "")">
                    <form method="get" action="/Turn/CashFlowList" style="display: inline;">
                        <input type="hidden" name="pageNumber" value="@prevPage">
                        <input type="hidden" name="pageSize" value="@ViewBag.PageSize">
                        <input type="hidden" name="sortBy" value="@ViewBag.SortBy">
                        <input type="hidden" name="sortDirection" value="@ViewBag.SortDirection">
                        <button type="submit" class="button-3d">
                            <div class="button-top">
                                <span class="material-icons">❮</span>
                            </div>
                            <div class="button-bottom"></div>
                            <div class="button-base"></div>
                        </button>
                    </form>
                </li>


                <!-- Páginas visibles -->
                @for (int i = 0; i < ViewBag.VisiblePages.Count; i++)
                {
                    int currentPage = ViewBag.VisiblePages[i];

                    if (i > 0 && currentPage > ViewBag.VisiblePages[i - 1] + 1)
                    {
                        <!-- Mostrar elipsis -->
                        <li class="page-item disabled">
                            <button class="button-3d" disabled>
                                <div class="button-top">
                                    ...
                                </div>
                                <div class="button-bottom"></div>
                                <div class="button-base"></div>
                            </button>
                        </li>
                    }

                    <li class="page-item @(ViewBag.PageNumber == currentPage ? "active" : "")">
                        <form method="get" action="/Turn/CashFlowList" style="display: inline;">
                            <input type="hidden" name="pageNumber" value="@currentPage">
                            <input type="hidden" name="pageSize" value="@ViewBag.PageSize">
                            <input type="hidden" name="sortBy" value="@ViewBag.SortBy">
                            <input type="hidden" name="sortDirection" value="@ViewBag.SortDirection">
                            <button type="submit" class="button-3d">
                                <div class="button-top">
                                    @currentPage
                                </div>
                                <div class="button-bottom"></div>
                                <div class="button-base"></div>
                            </button>
                        </form>
                    </li>
                }

                <!-- Botón "Siguiente" -->
                <li class="page-item @(ViewBag.PageNumber == ViewBag.TotalPages ? "disabled" : "")">
                    <form method="get" action="/Turn/CashFlowList" style="display: inline;">
                        <input type="hidden" name="pageNumber" value="@nextPage">
                        <input type="hidden" name="pageSize" value="@ViewBag.PageSize">
                        <input type="hidden" name="sortBy" value="@ViewBag.SortBy">
                        <input type="hidden" name="sortDirection" value="@ViewBag.SortDirection">
                        <button type="submit" class="button-3d">
                            <div class="button-top">
                                <span class="material-icons">❯</span>
                            </div>
                            <div class="button-bottom"></div>
                            <div class="button-base"></div>
                        </button>
                    </form>
                </li>
            </ul>
        </nav>
    }
    else
    {
        <p class="notFound mt-4">No hay ingresos ni egresos.</p>
    }
</div>

<script>
    function updatePaymentRoute(event, formId, inputId) {
        event.preventDefault();

        var paymentValue = document.getElementById(inputId).value;

        if (paymentValue <= 0) {
            alert("Por favor, ingresa un importe válido antes de enviar.");
            return;
        }

        var form = document.getElementById(formId);
        form.setAttribute("asp-route-import", paymentValue);
        form.submit();
    }
</script>
